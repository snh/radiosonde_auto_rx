name: Container image using Podman

on:
  push:
    branches:
      - 'testing'
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build container image using Podman
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/386, linux/arm64, linux/arm/v6, linux/arm/v7]
    steps:
      - name: Declare platform
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM=${platform//\//-}" >> $GITHUB_ENV

      - name: Create pip cache directory
        run: |
          mkdir -p /tmp/pip-cache

      - name: Transfer pip cache
        uses: actions/cache@v4
        with:
          path: /tmp/pip-cache
          key: pip-cache-${{ env.PLATFORM }}-${{ github.run_id }}
          restore-keys: |
            pip-cache-${{ env.PLATFORM }}-

      - name: Inspect pip cache directory
        run: |
          ls -la /tmp/pip-cache

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Calculate container metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ./Dockerfile
          image: ghcr.io/${{ github.repository }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ github.sha }}-${{ env.PLATFORM }}
          platforms: ${{ matrix.platform }}
          extra-args: --volume /tmp/pip-cache:/root/.cache/pip

      - name: Push to registry
#        if: ${{ github.event_name != 'pull_request' }}
        uses: redhat-actions/push-to-registry@v2
        with:
          tags: ghcr.io/${{ github.repository }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Inspect pip cache directory
        run: |
          ls -la /tmp/pip-cache

  merge:
    name: Publish multi-platform image
#    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Calculate container metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifest
        run: |
          docker buildx imagetools create \
            $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            ghcr.io/${{ github.repository }}:${{ github.sha }}-linux-amd64 \
            ghcr.io/${{ github.repository }}:${{ github.sha }}-linux-386 \
            ghcr.io/${{ github.repository }}:${{ github.sha }}-linux-arm64 \
            ghcr.io/${{ github.repository }}:${{ github.sha }}-linux-arm-v6 \
            ghcr.io/${{ github.repository }}:${{ github.sha }}-linux-arm-v7

      - name: Inspect container image
        run: |
          docker buildx imagetools inspect ghcr.io/${{ github.repository }}:${{ steps.meta.outputs.version }}
